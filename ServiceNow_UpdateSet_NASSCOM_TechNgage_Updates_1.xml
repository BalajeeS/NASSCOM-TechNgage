<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2016-05-15 12:55:27">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Global">global</application>
<application_name>Global</application_name>
<application_scope>global</application_scope>
<application_version/>
<collisions/>
<commit_date/>
<deleted/>
<description/>
<inserted/>
<name>Nasscom_Project_Updates_1</name>
<origin_sys_id/>
<release_date/>
<remote_sys_id>01a5a9d74f531200d9e64fe18110c717</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_created_by>Surendar</sys_created_by>
<sys_created_on>2016-05-15 12:55:27</sys_created_on>
<sys_id>ba2721534f531200d9e64fe18110c7e1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>Surendar</sys_updated_by>
<sys_updated_on>2016-05-15 12:55:27</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_dcd6c75d9f023100667df79ff57fcfb6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[addLoadEvent(function(){
	var ga = new GlideAjax('SMGeolocationAJAX');
	ga.addParam('sysparm_smConfigId', smConfigId);
	ga.addParam('sysparm_name', 'getDispatchMapInfo');
	ga.getXMLAnswer(function(info){
		info = info.evalJSON();
		var mapId = info.map;
		var form = document.forms[0];
		form.style.height = '100%';
		});
	this._reloadFilterBar();
});

window.onresize = adjustFilterPosition;

function adjustFilterPosition() {
	var ft = gel('filter_table');
	var fi = gel('filter_icon');
	var geoContent = gel('headerFilter');
	var wth = geoContent.offsetWidth;
	var leftOffset = wth - ft.offsetWidth;
	ft.style.left = leftOffset + "px";
}

var smConfigId = gel('smConfigId').value.toString();
var smConfigGr = new GlideRecord("sm_config");
smConfigGr.get(smConfigId);

var secondFrameSource = "";
var user = gel('user').value;
var filterObject = new Object();
filterObject.mapType = gel('smMapType').value;
filterObject.unassigned = gel('unassign').value;
filterObject.assigned = gel('assign').value;
filterObject.routingNumbers = gel('routenum').value;
filterObject.agent= "all";
filterObject.myLocation = gel('myloc').value;
var routeButton = gel('auto_route');
var isAgent = gel('isAgent').value;
var isDispatcher = gel('isDispatcher').value;
var mapType = gel('smMapType').value;
var groupSelected = 'All';
var agentPickedText = "All";

if(isAgent == 'true' &amp;&amp; mapType == 'agent') {
	routeButton.style.display = "block";
	filterObject.myLocation = gel('myloc').value;
}
else
	filterObject.myLocation = false;

function showFilterWindow(){
	var ft = gel('filter_table');
	ft.style.display="block";
	var fi = gel('filter_icon');
	fi.className = "action_context btn btn-primary selected_action";
	adjustFilterPosition();
	closePreview();
}

function unassignedToggle(unassignedElem){
	if(unassignedElem.checked)
		filterObject.unassigned = true;
	else
		filterObject.unassigned = false;
}

function assignedToggle(assignedElem){
	if(assignedElem.checked)
		filterObject.assigned = true;
	else
		filterObject.assigned = false;
}

function workGroupPicked(groupName, groupText) {
	groupSelected = groupText;
	filterObject.workGroup = groupName;
	filterObject.agent = "all";
	filterObject.routingNumbers = false;
	routeButton.style.display = "none";
	getGroupAgents(groupName);
}

function getGroupAgents(groupSys) {
	var ajax = new GlideAjax('SMGeolocationAJAX');
	ajax.addParam('sysparm_name', 'getAgentList');
	ajax.addParam('sysparm_group', groupSys);
	ajax.addParam('sysparm_smConfigId', smConfigId);
	ajax.getXMLAnswer(getAgentsResponse);
}

function getAgentsResponse(answer) {
	var al = document.getElementById("agents_list");
	al.innerHTML = "";
	answer = answer.evalJSON();
	for(var i=0 ; i &lt; answer.length ; i++) {
		var c = cel("option");
		c.setAttribute("value",answer[i].value);
		c.innerHTML = answer[i].label;
		al.appendChild(c);
	}
}

function agentPicked(agentName, agentText){
	agentPickedText = agentText;
	filterObject.agent = agentName;
	if(agentName != "all")
		filterObject.routingNumbers = true;
	showAutoRouteButton(agentName);
}

function showMyLocation(myLocElem) {
	if(myLocElem.checked)
		filterObject.myLocation = true;
	else
		filterObject.myLocation = false;
}

function showRoutingNumbers(routingElem) {
	if(routingElem.checked)
		filterObject.routingNumbers = true;
	else
		filterObject.routingNumbers = false;
}

function submitChanges() {
	filterObject.date = gel('date').value;
	var ft = gel('filter_table');
	ft.style.display="none";
	var fi = gel('filter_icon');
	fi.style.display="inline";
	
	this._reloadFilterBar();
	
	var ajax = new GlideAjax('SMGeolocationAJAX');
	ajax.addParam('sysparm_name', 'submitMapPreferences');
	ajax.addParam('sysparm_source', 'desktop');
	ajax.addParam('sysparm_pref_name', 'geo_location_user_property');
	ajax.addParam('sysparm_user', user);
	ajax.addParam('sysparm_smConfigId', smConfigId);
	addFilterParameters(ajax);
	ajax.getXMLAnswer(getAvailableMapItemsResponse);
	return false;
}

function addFilterParameters(ga) {
	for(var key in filterObject) {
		if (!key)
			continue;
		ga.addParam('sysparm_' + key, filterObject[key] + '');
	}
}

function getAvailableMapItemsResponse(answer){
	_reloadFrame('map_frame');
}

function cancelChanges(){
	var ft = gel('filter_table');
	ft.style.display="none";
	var fi = gel('filter_icon');
	fi.style.display="inline";
	fi.className = "action_context btn btn-default";
	return false;
}

function showAutoRouteButton(agentName){
	if(agentName != "all")
		routeButton.style.display = "block";
	else
		routeButton.style.display = "none";
}

function saveAndAutoRoute(){
	filterObject.date = gel('date').value;
	var agentToAutoRoute ;
	
	if(filterObject.agent)
		agentToAutoRoute = filterObject.agent;
	else if(isAgent == 'true')
		agentToAutoRoute = user;
	else
		{
		alert("Can not perform Auto-Route"); //should not happen
		return false;
	}
	
	filterObject.agent = agentToAutoRoute;
	filterObject.routingNumbers = true;
	
	var ft = gel('filter_table');
	ft.style.display="none";
	var fi = gel('filter_icon');
	fi.style.display="inline";
	
	var ajax = new GlideAjax('SMGeolocationAJAX');
	ajax.addParam('sysparm_name', 'submitMapPreferences');
	ajax.addParam('sysparm_user', user);
	ajax.addParam('sysparm_pref_name', 'geo_location_user_property');
	ajax.addParam('sysparm_autoRoute', 'true');
	ajax.addParam('sysparm_smConfigId', smConfigId);
	addFilterParameters(ajax);
	ajax.getXMLAnswer(getSaveAndAutoRouteResult);
	return false;
}

function getSaveAndAutoRouteResult(answer){
	var g_form = new GlideForm();
	answer = answer.evalJSON();
	if (answer.info)
		for (var i = 0; i&lt; answer.info.length; i++)
		g_form.addInfoMessage(answer.info[i]);
	
	if (answer.error)
		for (i = 0; i&lt; answer.error.length; i++)
		g_form.addErrorMessage(answer.error[i]);
	
	_reloadFrame('map_frame');
}

function taskClicked(id){
	var dialog = new GlideDialogForm("Task Form", smConfigGr.task_table);
	dialog.setSysID(id);
	dialog.setDialogSize('600', '500');
	dialog.addParm("sysparm_view", "map");
	dialog.addParm("sysparm_titleless", false);
	
	dialog.render();
}

function agentClicked(id){
	var dialog = new GlideDialogForm("Agent Form", "sys_user");
	dialog.setSysID(id);
	dialog.setDialogSize('600', '500');
	dialog.addParm("sysparm_view", "map");
	dialog.addParm("sysparm_titleless", false);
	
	dialog.render();
}

function linkClicked(text){
	var ft = gel('filter_table');
	ft.style.display="none";
	gel('preview_pane').innerHTML = text;
	gel('map_iframe').style.width = '75%';
	var ppage = gel('preview');
	ppage.style.width = '25%';
	ppage.style.display = 'inline';
	gel('close_image').style.display = 'inline';
}

function closePreview(){
	gel('close_image').style.display = 'none';
	var ppage = gel('preview');
	ppage.style.display = 'none';
	ppage.style.width = '0%';
	gel('map_iframe').style.width = '100%';
}


function checkSourceRedirection(frame){
	var source = frame.contentDocument.documentURI;
	if(source.indexOf("map_page.do") != -1){
		closePreview();
		secondFrameSource = "";
		_reloadFrame('map_frame');
	}
}

addLoadEvent(function() {
	var frame = gel('preview_pane');
	frame.onload = function() {
		checkSourceRedirection(frame);
	};
});

function _reloadFrame(mapFrame){
	var frame = gel(mapFrame);
	frame.src = frame.src;
	closePreview();
}

function _reloadFilterBar(){
	var htmlContent = '&lt;table class="filter_dialog"&gt;&lt;tr&gt;&lt;td style="font-weight: bold"&gt;${gs.getMessage("Filter:")}&lt;/td&gt;&lt;td&gt;'+ gel('date').value +'&lt;/td&gt;';
	if (filterObject.assigned == true || filterObject.assigned == "true") {
		htmlContent += '&lt;td&gt;&lt;img class="form-icon" src="images/iconb.png" height="20" width="12"/&gt; ${gs.getMessage("Assigned tasks")}&lt;/td&gt;';
		htmlContent += '&lt;td&gt;&lt;img class="form-icon" src="images/icong.png" height="20" width="12"/&gt; ${gs.getMessage("Accepted tasks")}&lt;/td&gt;';
	}
	if (filterObject.unassigned == true || filterObject.unassigned == "true")
		htmlContent += '&lt;td&gt;&lt;img class="form-icon" src="images/iconr.png" height="20" width="12"/&gt; ${gs.getMessage("Unassigned tasks")}&lt;/td&gt;';
	if(isDispatcher)
		if(mapType == 'dispatch')
		htmlContent += '&lt;td&gt;${gs.getMessage("My agents work group: ")}' + groupSelected + '&lt;/td&gt;';
	if(isAgent)
		if(mapType == 'agent')
		if(filterObject.myLocation == true || filterObject.myLocation == 'true')
		htmlContent += '&lt;td&gt;&lt;img class="form-icon" src="images/person2.png" height="15" width="15"/&gt; ${gs.getMessage("My location")}&lt;/td&gt;';
	if(isAgent)
		if(mapType == 'agent')
		if(filterObject.routingNumbers == true || filterObject.routingNumbers == 'true')
		htmlContent += '&lt;td&gt;${gs.getMessage("Routing Numbers")}&lt;/td&gt;';
	if(mapType != 'agent')
		htmlContent += '&lt;td&gt;${gs.getMessage("Agent:")} ' + agentPickedText + '&lt;/td&gt;';
	htmlContent += '&lt;td id="filter_icon" class="action_context btn btn-default" onclick="showFilterWindow();" style="display:${initialButtonDisplay}"&gt;${gs.getMessage("Edit")}&lt;/tr&gt;&lt;/table&gt;';
	document.getElementById('filterBarContent').innerHTML = htmlContent;
	htmlContent += '&lt;div onclick = "testLocation();" class="action_context btn btn-default" style="align-items: right;float: right;margin-top: 7px;width: 40px;"&gt;Tag&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;';
	document.getElementById('filterBarContent').innerHTML = htmlContent;
	
}
//showFilterWindow();

function testLocation()
{
	if (navigator.geolocation) 
	{
		navigator.geolocation.getCurrentPosition(showPosition);
	} 
	else 
	{
		alert("Geolocation is not supported by this browser.");
	}
}
function showPosition(position) 
{
		var x = "Latitude: " + position.coords.latitude +
		"&lt;br&gt;Longitude: " + position.coords.longitude;
		

var ga = new GlideAjax('setLocation');
		ga.addParam('sysparm_name','setL');
		ga.addParam('sysparm_lat',position.coords.latitude);
		ga.addParam('sysparm_long',position.coords.longitude);
		ga.getXML(HelloWorldParse1);
}		
		function HelloWorldParse1(response)
		{
			var answer = response.responseXML.documentElement.getAttribute("answer");
			var locc = document.getElementById("map_iframe").childNodes; locc[0].src = locc[0].src;
		}]]&gt;&lt;/client_script&gt;&lt;description&gt;This page is for showing and filtering the geo location map&lt;/description&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint/&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;j:jelly xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null" trim="false"&gt;

    &lt;g2:doctype name="html" /&gt;
    &lt;HTML style="height: 100%"&gt;
    &lt;HEAD&gt;
        &lt;g:inline template="html_page_script_globals.xml" /&gt;
        &lt;g:inline template="html_page_title.xml" /&gt;
        &lt;g:inline template="html_page_meta.xml" /&gt;
        &lt;g:inline template="map_header_tags.xml" /&gt;
        &lt;link href="${gs.getEscapedProperty('glide.product.icon', 'favicon.ico')}" rel="shortcut icon" /&gt;
    &lt;/HEAD&gt;
    &lt;body&gt;
    &lt;g:evaluate var="jvar_today"&gt;
      var gdt = new GlideDateTime();
      gdt.setDisplayValue(gs.nowDateTime());
      var today = gdt.getLocalDate().getDisplayValue();
    &lt;/g:evaluate&gt;

    &lt;g:evaluate var="jvar_smConfig"  object="true" &gt;
        var gr = new GlideRecord("sm_config");
        var smConfigObj = {};
        if (gr.get('app_name', '${sysparm_sysname}')) {
            smConfigObj.smConfigId = gr.sys_id;
            smConfigObj.dispatcherRole = gr.dispatcher_role.name;
            smConfigObj.agentRole = gr.agent_role.name;
            smConfigObj.isDispatcher = gs.hasRole(smConfigObj.dispatcherRole);
            smConfigObj.isAgent = gs.hasRole(smConfigObj.agentRole);
        } 
        smConfigObj;
    &lt;/g:evaluate&gt;

    &lt;j:set var="jvar_smMapType" value="${sysparm_smMapType}" /&gt;
    &lt;j:set var="jvar_dispatcherRole" value="${smConfigObj.dispatcherRole}"/&gt;
    &lt;j:set var="jvar_agentRole" value="${smConfigObj.agentRole}"/&gt;
    &lt;j:set var="jvar_isDispatcher" value="${smConfigObj.isDispatcher}"/&gt;
    &lt;j:set var="jvar_isAgent" value="${smConfigObj.isAgent}"/&gt;
    &lt;j:set var="jvar_smConfigId" value="${smConfigObj.smConfigId}"/&gt;
    &lt;j:set var="jvar_user" value="${gs.getUser().getID()}"/&gt;
    &lt;j:set var="jvar_mapPageSysId" value="4a1724519f02310034c6b6a0942e7071"/&gt;
    
    &lt;g:requires name="styles/geoLocation.css"/&gt;
    &lt;g:evaluate var="jvar_initialValues" object="true" jelly="true"&gt;
        var gu = new SMGeolocationUtils("${jvar_smConfigId}");
        gu.resetPreferences("${jvar_smMapType}");
        var initialObject = gu.getPreferences("geo_location_user_property");
        var initialButtonDisplay = 'inline';
        if (!(gs.hasRole('${jvar_agentRole}') || gs.hasRole('${jvar_dispatcherRole}')))
            initialButtonDisplay = 'none';
    &lt;/g:evaluate&gt;
    &lt;g:ui_form&gt;
        &lt;input type="hidden" name="user" id="user" value="${jvar_user}"/&gt;
        &lt;input type="hidden" name="isAgent" id="isAgent" value="${smConfigObj.isAgent}"/&gt;
        &lt;input type="hidden" name="isDispatcher" id="isDispatcher" value="${smConfigObj.isDispatcher}"/&gt;
        &lt;input type="hidden" name="unassign" id="unassign" value="${initialObject.unassigned}"/&gt;
        &lt;input type="hidden" name="assign" id="assign" value="${initialObject.assigned}"/&gt;
        &lt;input type="hidden" name="unaccepted" id="unaccepted" value="${initialObject.unaccepted}"/&gt;
        &lt;input type="hidden" name="myloc" id="myloc" value="${initialObject.myLocation}"/&gt;
        &lt;input type="hidden" name="routenum" id="routenum" value="${initialObject.routingNumbers}"/&gt;
        &lt;input type="hidden" name="smMapType" id="smMapType" value="${jvar_smMapType}"/&gt;
        &lt;input type="hidden" id="mapPageSysId" name="mapPageSysId" value="${jvar_mapPageSysId}"/&gt;
        &lt;input type="hidden" id="smConfigId" name="smConfigId" value="${smConfigObj.smConfigId}"/&gt;

        &lt;table id="filter_table" name="filter_table"&gt;           
            &lt;tr class="bottom_border"&gt;
                &lt;td class="title" style="font-weight: normal" colspan="2"&gt;
                    &lt;div class="left"&gt;${gs.getMessage('Filter')}&lt;/div&gt;
                    &lt;div class="right"&gt;
                        &lt;button type="submit" class="action_context btn btn-default" id="cancel" onclick="return cancelChanges();"&gt;${gs.getMessage('Cancel')}&lt;/button&gt;
                        &lt;button type="submit" class="action_context btn btn-default" id="submit" onclick="return submitChanges();"&gt;${gs.getMessage('Apply')}&lt;/button&gt;
                        &lt;button type="submit" class="action_context btn btn-default" id="auto_route" onclick="return saveAndAutoRoute();"&gt;${gs.getMessage('Apply Auto-Routing')}&lt;/button&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="trTable"&gt;
                &lt;td class="bold_text tdTableRow"&gt; ${gs.getMessage('Date')} &lt;/td&gt;
                &lt;td class="tdableRow"&gt;
                    &lt;g:ui_date name="date" id="date" value="${initialObject.date}" onchange="datePicked(this.value);"/&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;j2:if test="${jvar_isDispatcher == true}"&gt;
                &lt;j2:if test="${jvar_smMapType == 'dispatch'}"&gt;
                &lt;tr class="trTable"&gt;
                    &lt;td class="bold_text tdTableRow"&gt; ${gs.getMessage("My agent's work group")} &lt;/td&gt;
                    &lt;td class="tdTableRow"&gt;
                        &lt;select name="work_group" id="work_group" value="${jvar_work_group}" onchange="workGroupPicked(this.value, this.options[this.selectedIndex].innerHTML);"&gt;
                            &lt;g2:evaluate var="jvar_group"&gt;
                                var groups = (new SMGeolocationUtils('${jvar_smConfigId}')).getGroupList();
                            &lt;/g2:evaluate&gt;
                            &lt;j2:forEach items="$[groups]" var="jvar_group"&gt;
                                &lt;g2:evaluate jelly="true"&gt;
                                    var g_group = jelly.jvar_group;
                                    var g_groupId = g_group.value;
                                    var g_groupLabel = g_group.label;
                                &lt;/g2:evaluate&gt;
                                &lt;option value="$[g_groupId]"&gt;$[g_groupLabel]&lt;/option&gt;
                            &lt;/j2:forEach&gt;
                        &lt;/select&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr class="trTable"&gt;
                    &lt;td class="bold_text tdTableRow"&gt;
                        &lt;!--&lt;img class="form-icon" src="images/agent.png" height="30" width="30"/&gt;--&gt;
                        ${gs.getMessage("Agent (current location)")}
                    &lt;/td&gt;
                    &lt;td class="tdTableRow"&gt;
                        &lt;select name="agents_list" id="agents_list" value="all" onchange="agentPicked(this.value, this.options[this.selectedIndex].innerHTML);"&gt;
                            &lt;option value="all"&gt;${gs.getMessage("All")} &lt;/option&gt;
                        &lt;/select&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
               &lt;/j2:if&gt;
            &lt;/j2:if&gt;
            &lt;j:if test="${jvar_isAgent == true}" &gt;
               &lt;j:if test="${jvar_smMapType =='agent'}"&gt;
                &lt;tr class="trTable"&gt;
                    &lt;td class="bold_text tdTableRow"&gt;
                         ${gs.getMessage('Show my location:')}
                    &lt;/td&gt;
                    &lt;td class="tdTableRow"&gt;
                        &lt;j2:if test="${initialObject.myLocation == 'true' || initialObject.myLocation == true}"&gt;
                            &lt;input type="checkbox" id="my_location" name="my_location" onclick="showMyLocation(this);" checked="true"/&gt;
                        &lt;/j2:if&gt;
                        &lt;j2:if test="${initialObject.myLocation == 'false' || initialObject.myLocation == false}"&gt;
                            &lt;input type="checkbox" id="my_location" name="my_location" onclick="showMyLocation(this);"/&gt;
                        &lt;/j2:if&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr class="trTable"&gt;
                    &lt;td class="bold_text tdTableRow"&gt;${gs.getMessage('Show routing numbers:')}&lt;/td&gt;
                    &lt;td class="tdTableRow"&gt;
                        &lt;j2:if test="${initialObject.routingNumbers == 'true' || initialObject.routingNumbers == true}"&gt;
                            &lt;input type="checkbox" id="routing_numbers" name="routing_numbers" onclick="showRoutingNumbers(this);" checked="true"/&gt;
                        &lt;/j2:if&gt;
                        &lt;j2:if test="${initialObject.routingNumbers == 'false' || initialObject.routingNumbers == false}"&gt;
                            &lt;input type="checkbox" id="routing_numbers" name="routing_numbers" onclick="showRoutingNumbers(this);"/&gt;
                        &lt;/j2:if&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
              &lt;/j:if&gt;
            &lt;/j:if&gt;  
            &lt;tr class="bottom_border"&gt;
                &lt;td class="bold_text" colspan="2"&gt;${gs.getMessage('Tasks')}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="bottom_border"&gt;
                &lt;td&gt;
                    &lt;!--&lt;img class="form-icon" src="images/icong.png" height="20" width="12"/&gt;--&gt;
                    ${gs.getMessage('Assigned')}
                &lt;/td&gt;
                &lt;td class="right"&gt;
                    &lt;j2:if test="${initialObject.assigned == 'true'}"&gt;
                        &lt;input type="checkbox" id="assigned" name="assigned" onclick="assignedToggle(this);" checked="true"/&gt;
                    &lt;/j2:if&gt;
                    &lt;j2:if test="${initialObject.assigned == 'false'}"&gt;
                        &lt;input type="checkbox" id="assigned" name="assigned" onclick="assignedToggle(this);"/&gt;
                    &lt;/j2:if&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
             &lt;tr class="bottom_border"&gt;
                &lt;td&gt;
                    &lt;!--&lt;img class="form-icon" src="images/iconr.png" height="20" width="12"/&gt;--&gt;
                    ${gs.getMessage('Unassigned')}
                &lt;/td&gt;
                &lt;td class="right"&gt;
                    &lt;j2:if test="${initialObject.unassigned == 'true'}"&gt;
                        &lt;input type="checkbox" id="unassigned" name="unassigned" onclick="unassignedToggle(this);" checked="true"/&gt;
                    &lt;/j2:if&gt;
                    &lt;j2:if test="${initialObject.unassigned == 'false'}"&gt;
                        &lt;input type="checkbox" id="unassigned" name="unassigned" onclick="unassignedToggle(this);"/&gt;
                    &lt;/j2:if&gt;
                &lt;/td&gt;
            &lt;/tr&gt;            
        &lt;/table&gt;
        &lt;div id="headerFilter" name="headerFilter" class="header_filter" style="height:70px"&gt;
            &lt;div class="left"&gt;
                &lt;span class="backButton"&gt; &lt;/span&gt;
                &lt;j:if test='${jvar_smMapType == "dispatch"}'&gt;
                    &lt;span class="title"&gt;${gs.getMessage('My Dispatch Map')}&lt;/span&gt;
                &lt;/j:if&gt;
                &lt;j:if test='${jvar_smMapType == "agent"}'&gt;
                    &lt;span class="title"&gt;My Map&lt;/span&gt;
                &lt;/j:if&gt;             
            &lt;/div&gt;
            &lt;div class="right" id="filterBarContent"/&gt;
        &lt;/div&gt;
        &lt;div id="map_iframe" name="map_iframe"&gt;         
&lt;iframe frameborder="0" name="map_frame" id="map_frame" src="$sm_map.do?sysparm_map=new_dispatch_map&amp;amp;sysparm_sys_id=${jvar_mapPageSysId}&amp;amp;sysparm_userlocation=true&amp;amp;sysparm_smConfigId=${jvar_smConfigId}&amp;amp;sysparm_smMapType=dispatch" style="height:100%"/&gt;
        &lt;/div&gt;
        &lt;div id="preview"&gt;
            &lt;img id="close_image" src="images/x.gifx" onclick="closePreview();"/&gt;
            &lt;div /&gt;
            &lt;div frameborder="0" name="preview_pane" id="preview_pane" /&gt;
        &lt;/div&gt;
    &lt;/g:ui_form&gt;
    
&lt;/body&gt;
&lt;/HTML&gt;
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;sm_core_geo_location&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2015-02-04 19:05:42&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;dcd6c75d9f023100667df79ff57fcfb6&lt;/sys_id&gt;&lt;sys_mod_count&gt;136&lt;/sys_mod_count&gt;&lt;sys_name&gt;sm_core_geo_location&lt;/sys_name&gt;&lt;sys_package display_value="Service Management Geolocation" source="com.snc.service_management.geolocation"&gt;366033b04f791e40d9e64fe18110c75b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_dcd6c75d9f023100667df79ff57fcfb6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Surendar&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2016-05-15 12:54:16&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Nasscom_Project_Updates_1">ba2721534f531200d9e64fe18110c7e1</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Surendar</sys_created_by>
<sys_created_on>2016-05-15 12:55:27</sys_created_on>
<sys_id>3e2721534f531200d9e64fe18110c7e1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>Surendar</sys_updated_by>
<sys_updated_on>2016-05-15 12:55:27</sys_updated_on>
<table/>
<target_name>sm_core_geo_location</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_script_include_4b131c0f4fd31200d9e64fe18110c735</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.setLocation&lt;/api_name&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description&gt;Script to Update the current user profile's location&lt;/description&gt;&lt;name&gt;setLocation&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var setLocation = Class.create();
setLocation.prototype = Object.extendsObject(AbstractAjaxProcessor, {
	setL: function()
	
	{
		var lat = this.getParameter('sysparm_lat');
		var longTest = this.getParameter('sysparm_long');
		var loc = new GlideRecord('cmn_location');
		loc.addQuery('latitude',lat);
		loc.addQuery('longitude',longTest);
		loc.query();
		if(loc.next())
			{
				var userLocUpdate = new GlideRecord('sys_user');
				userLocUpdate.addQuery('sys_id',gs.getUserID());
				userLocUpdate.query();
				if(userLocUpdate.next())
					{
						userLocUpdate.location = loc.sys_id;
						userLocUpdate.update();
					}
			}
		else
		{
			var locInsert = new GlideRecord('cmn_location');
			locInsert.initialize();
			locInsert.latitude = lat;
			locInsert.longitude = longTest;
			locInsert.name = 'Bangalore123';
			var a = locInsert.insert();

			var userLoc = new GlideRecord('sys_user');
			userLoc.addQuery('sys_id',gs.getUserID());
			userLoc.query();
			if(userLoc.next())
				{
					userLoc.location = locInsert.sys_id;
					userLoc.update();
				}
			}
		
	},
	type: 'setLocation'
});]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Surendar&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-05-14 12:10:11&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;4b131c0f4fd31200d9e64fe18110c735&lt;/sys_id&gt;&lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;&lt;sys_name&gt;setLocation&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_4b131c0f4fd31200d9e64fe18110c735&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Surendar&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2016-05-15 12:55:05&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Nasscom_Project_Updates_1">ba2721534f531200d9e64fe18110c7e1</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Surendar</sys_created_by>
<sys_created_on>2016-05-15 12:55:27</sys_created_on>
<sys_id>fa2721534f531200d9e64fe18110c7e1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>Surendar</sys_updated_by>
<sys_updated_on>2016-05-15 12:55:27</sys_updated_on>
<table/>
<target_name>setLocation</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
